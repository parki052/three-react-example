{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.createDidYouMeanMessage = exports.logValidationWarning = exports.ValidationError = exports.formatPrettyObject = exports.format = exports.WARNING = exports.ERROR = exports.DEPRECATION = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = _interopRequireDefault(require('pretty-format'));\n\n  _prettyFormat = function _prettyFormat() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _leven() {\n  const data = _interopRequireDefault(require('leven'));\n\n  _leven = function _leven() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst BULLET = _chalk().default.bold('\\u25cf');\n\nconst DEPRECATION = \"\".concat(BULLET, \" Deprecation Warning\");\nexports.DEPRECATION = DEPRECATION;\nconst ERROR = \"\".concat(BULLET, \" Validation Error\");\nexports.ERROR = ERROR;\nconst WARNING = \"\".concat(BULLET, \" Validation Warning\");\nexports.WARNING = WARNING;\n\nconst format = value => typeof value === 'function' ? value.toString() : (0, _prettyFormat().default)(value, {\n  min: true\n});\n\nexports.format = format;\n\nconst formatPrettyObject = value => typeof value === 'function' ? value.toString() : JSON.stringify(value, null, 2).split('\\n').join('\\n    ');\n\nexports.formatPrettyObject = formatPrettyObject;\n\nclass ValidationError extends Error {\n  constructor(name, message, comment) {\n    super();\n\n    _defineProperty(this, 'name', void 0);\n\n    _defineProperty(this, 'message', void 0);\n\n    comment = comment ? '\\n\\n' + comment : '\\n';\n    this.name = '';\n    this.message = _chalk().default.red(_chalk().default.bold(name) + ':\\n\\n' + message + comment);\n    Error.captureStackTrace(this, () => {});\n  }\n\n}\n\nexports.ValidationError = ValidationError;\n\nconst logValidationWarning = (name, message, comment) => {\n  comment = comment ? '\\n\\n' + comment : '\\n';\n  console.warn(_chalk().default.yellow(_chalk().default.bold(name) + ':\\n\\n' + message + comment));\n};\n\nexports.logValidationWarning = logValidationWarning;\n\nconst createDidYouMeanMessage = (unrecognized, allowedOptions) => {\n  const suggestion = allowedOptions.find(option => {\n    const steps = (0, _leven().default)(option, unrecognized);\n    return steps < 3;\n  });\n  return suggestion ? \"Did you mean \".concat(_chalk().default.bold(format(suggestion)), \"?\") : '';\n};\n\nexports.createDidYouMeanMessage = createDidYouMeanMessage;","map":null,"metadata":{},"sourceType":"script"}