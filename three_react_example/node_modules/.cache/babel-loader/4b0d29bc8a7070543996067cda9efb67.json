{"ast":null,"code":"'use strict';\n\nconst _require = require('stream'),\n      PassThrough = _require.PassThrough;\n\nmodule.exports = function ()\n/*streams...*/\n{\n  var sources = [];\n  var output = new PassThrough({\n    objectMode: true\n  });\n  output.setMaxListeners(0);\n  output.add = add;\n  output.isEmpty = isEmpty;\n  output.on('unpipe', remove);\n  Array.prototype.slice.call(arguments).forEach(add);\n  return output;\n\n  function add(source) {\n    if (Array.isArray(source)) {\n      source.forEach(add);\n      return this;\n    }\n\n    sources.push(source);\n    source.once('end', remove.bind(null, source));\n    source.once('error', output.emit.bind(output, 'error'));\n    source.pipe(output, {\n      end: false\n    });\n    return this;\n  }\n\n  function isEmpty() {\n    return sources.length == 0;\n  }\n\n  function remove(source) {\n    sources = sources.filter(function (it) {\n      return it !== source;\n    });\n\n    if (!sources.length && output.readable) {\n      output.end();\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}