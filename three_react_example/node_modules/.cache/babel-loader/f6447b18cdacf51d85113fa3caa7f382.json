{"ast":null,"code":"var semver = require(\"semver\");\n\nvar validateLicense = require('validate-npm-package-license');\n\nvar hostedGitInfo = require(\"hosted-git-info\");\n\nvar isBuiltinModule = require(\"resolve\").isCore;\n\nvar depTypes = [\"dependencies\", \"devDependencies\", \"optionalDependencies\"];\n\nvar extractDescription = require(\"./extract_description\");\n\nvar url = require(\"url\");\n\nvar typos = require(\"./typos.json\");\n\nvar fixer = module.exports = {\n  // default warning function\n  warn: function () {},\n  fixRepositoryField: function (data) {\n    if (data.repositories) {\n      this.warn(\"repositories\");\n      data.repository = data.repositories[0];\n    }\n\n    if (!data.repository) return this.warn(\"missingRepository\");\n\n    if (typeof data.repository === \"string\") {\n      data.repository = {\n        type: \"git\",\n        url: data.repository\n      };\n    }\n\n    var r = data.repository.url || \"\";\n\n    if (r) {\n      var hosted = hostedGitInfo.fromUrl(r);\n\n      if (hosted) {\n        r = data.repository.url = hosted.getDefaultRepresentation() == \"shortcut\" ? hosted.https() : hosted.toString();\n      }\n    }\n\n    if (r.match(/github.com\\/[^\\/]+\\/[^\\/]+\\.git\\.git$/)) {\n      this.warn(\"brokenGitUrl\", r);\n    }\n  },\n  fixTypos: function (data) {\n    Object.keys(typos.topLevel).forEach(function (d) {\n      if (data.hasOwnProperty(d)) {\n        this.warn(\"typo\", d, typos.topLevel[d]);\n      }\n    }, this);\n  },\n  fixScriptsField: function (data) {\n    if (!data.scripts) return;\n\n    if (typeof data.scripts !== \"object\") {\n      this.warn(\"nonObjectScripts\");\n      delete data.scripts;\n      return;\n    }\n\n    Object.keys(data.scripts).forEach(function (k) {\n      if (typeof data.scripts[k] !== \"string\") {\n        this.warn(\"nonStringScript\");\n        delete data.scripts[k];\n      } else if (typos.script[k] && !data.scripts[typos.script[k]]) {\n        this.warn(\"typo\", k, typos.script[k], \"scripts\");\n      }\n    }, this);\n  },\n  fixFilesField: function (data) {\n    var files = data.files;\n\n    if (files && !Array.isArray(files)) {\n      this.warn(\"nonArrayFiles\");\n      delete data.files;\n    } else if (data.files) {\n      data.files = data.files.filter(function (file) {\n        if (!file || typeof file !== \"string\") {\n          this.warn(\"invalidFilename\", file);\n          return false;\n        } else {\n          return true;\n        }\n      }, this);\n    }\n  },\n  fixBinField: function (data) {\n    if (!data.bin) return;\n\n    if (typeof data.bin === \"string\") {\n      var b = {};\n      var match;\n\n      if (match = data.name.match(/^@[^/]+[/](.*)$/)) {\n        b[match[1]] = data.bin;\n      } else {\n        b[data.name] = data.bin;\n      }\n\n      data.bin = b;\n    }\n  },\n  fixManField: function (data) {\n    if (!data.man) return;\n\n    if (typeof data.man === \"string\") {\n      data.man = [data.man];\n    }\n  },\n  fixBundleDependenciesField: function (data) {\n    var bdd = \"bundledDependencies\";\n    var bd = \"bundleDependencies\";\n\n    if (data[bdd] && !data[bd]) {\n      data[bd] = data[bdd];\n      delete data[bdd];\n    }\n\n    if (data[bd] && !Array.isArray(data[bd])) {\n      this.warn(\"nonArrayBundleDependencies\");\n      delete data[bd];\n    } else if (data[bd]) {\n      data[bd] = data[bd].filter(function (bd) {\n        if (!bd || typeof bd !== 'string') {\n          this.warn(\"nonStringBundleDependency\", bd);\n          return false;\n        } else {\n          if (!data.dependencies) {\n            data.dependencies = {};\n          }\n\n          if (!data.dependencies.hasOwnProperty(bd)) {\n            this.warn(\"nonDependencyBundleDependency\", bd);\n            data.dependencies[bd] = \"*\";\n          }\n\n          return true;\n        }\n      }, this);\n    }\n  },\n  fixDependencies: function (data, strict) {\n    var loose = !strict;\n    objectifyDeps(data, this.warn);\n    addOptionalDepsToDeps(data, this.warn);\n    this.fixBundleDependenciesField(data);\n    ['dependencies', 'devDependencies'].forEach(function (deps) {\n      if (!(deps in data)) return;\n\n      if (!data[deps] || typeof data[deps] !== \"object\") {\n        this.warn(\"nonObjectDependencies\", deps);\n        delete data[deps];\n        return;\n      }\n\n      Object.keys(data[deps]).forEach(function (d) {\n        var r = data[deps][d];\n\n        if (typeof r !== 'string') {\n          this.warn(\"nonStringDependency\", d, JSON.stringify(r));\n          delete data[deps][d];\n        }\n\n        var hosted = hostedGitInfo.fromUrl(data[deps][d]);\n        if (hosted) data[deps][d] = hosted.toString();\n      }, this);\n    }, this);\n  },\n  fixModulesField: function (data) {\n    if (data.modules) {\n      this.warn(\"deprecatedModules\");\n      delete data.modules;\n    }\n  },\n  fixKeywordsField: function (data) {\n    if (typeof data.keywords === \"string\") {\n      data.keywords = data.keywords.split(/,\\s+/);\n    }\n\n    if (data.keywords && !Array.isArray(data.keywords)) {\n      delete data.keywords;\n      this.warn(\"nonArrayKeywords\");\n    } else if (data.keywords) {\n      data.keywords = data.keywords.filter(function (kw) {\n        if (typeof kw !== \"string\" || !kw) {\n          this.warn(\"nonStringKeyword\");\n          return false;\n        } else {\n          return true;\n        }\n      }, this);\n    }\n  },\n  fixVersionField: function (data, strict) {\n    // allow \"loose\" semver 1.0 versions in non-strict mode\n    // enforce strict semver 2.0 compliance in strict mode\n    var loose = !strict;\n\n    if (!data.version) {\n      data.version = \"\";\n      return true;\n    }\n\n    if (!semver.valid(data.version, loose)) {\n      throw new Error('Invalid version: \"' + data.version + '\"');\n    }\n\n    data.version = semver.clean(data.version, loose);\n    return true;\n  },\n  fixPeople: function (data) {\n    modifyPeople(data, unParsePerson);\n    modifyPeople(data, parsePerson);\n  },\n  fixNameField: function (data, options) {\n    if (typeof options === \"boolean\") options = {\n      strict: options\n    };else if (typeof options === \"undefined\") options = {};\n    var strict = options.strict;\n\n    if (!data.name && !strict) {\n      data.name = \"\";\n      return;\n    }\n\n    if (typeof data.name !== \"string\") {\n      throw new Error(\"name field must be a string.\");\n    }\n\n    if (!strict) data.name = data.name.trim();\n    ensureValidName(data.name, strict, options.allowLegacyCase);\n    if (isBuiltinModule(data.name)) this.warn(\"conflictingName\", data.name);\n  },\n  fixDescriptionField: function (data) {\n    if (data.description && typeof data.description !== 'string') {\n      this.warn(\"nonStringDescription\");\n      delete data.description;\n    }\n\n    if (data.readme && !data.description) data.description = extractDescription(data.readme);\n    if (data.description === undefined) delete data.description;\n    if (!data.description) this.warn(\"missingDescription\");\n  },\n  fixReadmeField: function (data) {\n    if (!data.readme) {\n      this.warn(\"missingReadme\");\n      data.readme = \"ERROR: No README data found!\";\n    }\n  },\n  fixBugsField: function (data) {\n    if (!data.bugs && data.repository && data.repository.url) {\n      var hosted = hostedGitInfo.fromUrl(data.repository.url);\n\n      if (hosted && hosted.bugs()) {\n        data.bugs = {\n          url: hosted.bugs()\n        };\n      }\n    } else if (data.bugs) {\n      var emailRe = /^.+@.*\\..+$/;\n\n      if (typeof data.bugs == \"string\") {\n        if (emailRe.test(data.bugs)) data.bugs = {\n          email: data.bugs\n        };else if (url.parse(data.bugs).protocol) data.bugs = {\n          url: data.bugs\n        };else this.warn(\"nonEmailUrlBugsString\");\n      } else {\n        bugsTypos(data.bugs, this.warn);\n        var oldBugs = data.bugs;\n        data.bugs = {};\n\n        if (oldBugs.url) {\n          if (typeof oldBugs.url == \"string\" && url.parse(oldBugs.url).protocol) data.bugs.url = oldBugs.url;else this.warn(\"nonUrlBugsUrlField\");\n        }\n\n        if (oldBugs.email) {\n          if (typeof oldBugs.email == \"string\" && emailRe.test(oldBugs.email)) data.bugs.email = oldBugs.email;else this.warn(\"nonEmailBugsEmailField\");\n        }\n      }\n\n      if (!data.bugs.email && !data.bugs.url) {\n        delete data.bugs;\n        this.warn(\"emptyNormalizedBugs\");\n      }\n    }\n  },\n  fixHomepageField: function (data) {\n    if (!data.homepage && data.repository && data.repository.url) {\n      var hosted = hostedGitInfo.fromUrl(data.repository.url);\n      if (hosted && hosted.docs()) data.homepage = hosted.docs();\n    }\n\n    if (!data.homepage) return;\n\n    if (typeof data.homepage !== \"string\") {\n      this.warn(\"nonUrlHomepage\");\n      return delete data.homepage;\n    }\n\n    if (!url.parse(data.homepage).protocol) {\n      data.homepage = \"http://\" + data.homepage;\n    }\n  },\n  fixLicenseField: function (data) {\n    if (!data.license) {\n      return this.warn(\"missingLicense\");\n    } else {\n      if (typeof data.license !== 'string' || data.license.length < 1 || data.license.trim() === '') {\n        this.warn(\"invalidLicense\");\n      } else {\n        if (!validateLicense(data.license).validForNewPackages) this.warn(\"invalidLicense\");\n      }\n    }\n  }\n};\n\nfunction isValidScopedPackageName(spec) {\n  if (spec.charAt(0) !== '@') return false;\n  var rest = spec.slice(1).split('/');\n  if (rest.length !== 2) return false;\n  return rest[0] && rest[1] && rest[0] === encodeURIComponent(rest[0]) && rest[1] === encodeURIComponent(rest[1]);\n}\n\nfunction isCorrectlyEncodedName(spec) {\n  return !spec.match(/[\\/@\\s\\+%:]/) && spec === encodeURIComponent(spec);\n}\n\nfunction ensureValidName(name, strict, allowLegacyCase) {\n  if (name.charAt(0) === \".\" || !(isValidScopedPackageName(name) || isCorrectlyEncodedName(name)) || strict && !allowLegacyCase && name !== name.toLowerCase() || name.toLowerCase() === \"node_modules\" || name.toLowerCase() === \"favicon.ico\") {\n    throw new Error(\"Invalid name: \" + JSON.stringify(name));\n  }\n}\n\nfunction modifyPeople(data, fn) {\n  if (data.author) data.author = fn(data.author);\n  [\"maintainers\", \"contributors\"].forEach(function (set) {\n    if (!Array.isArray(data[set])) return;\n    data[set] = data[set].map(fn);\n  });\n  return data;\n}\n\nfunction unParsePerson(person) {\n  if (typeof person === \"string\") return person;\n  var name = person.name || \"\";\n  var u = person.url || person.web;\n  var url = u ? \" (\" + u + \")\" : \"\";\n  var e = person.email || person.mail;\n  var email = e ? \" <\" + e + \">\" : \"\";\n  return name + email + url;\n}\n\nfunction parsePerson(person) {\n  if (typeof person !== \"string\") return person;\n  var name = person.match(/^([^\\(<]+)/);\n  var url = person.match(/\\(([^\\)]+)\\)/);\n  var email = person.match(/<([^>]+)>/);\n  var obj = {};\n  if (name && name[0].trim()) obj.name = name[0].trim();\n  if (email) obj.email = email[1];\n  if (url) obj.url = url[1];\n  return obj;\n}\n\nfunction addOptionalDepsToDeps(data, warn) {\n  var o = data.optionalDependencies;\n  if (!o) return;\n  var d = data.dependencies || {};\n  Object.keys(o).forEach(function (k) {\n    d[k] = o[k];\n  });\n  data.dependencies = d;\n}\n\nfunction depObjectify(deps, type, warn) {\n  if (!deps) return {};\n\n  if (typeof deps === \"string\") {\n    deps = deps.trim().split(/[\\n\\r\\s\\t ,]+/);\n  }\n\n  if (!Array.isArray(deps)) return deps;\n  warn(\"deprecatedArrayDependencies\", type);\n  var o = {};\n  deps.filter(function (d) {\n    return typeof d === \"string\";\n  }).forEach(function (d) {\n    d = d.trim().split(/(:?[@\\s><=])/);\n    var dn = d.shift();\n    var dv = d.join(\"\");\n    dv = dv.trim();\n    dv = dv.replace(/^@/, \"\");\n    o[dn] = dv;\n  });\n  return o;\n}\n\nfunction objectifyDeps(data, warn) {\n  depTypes.forEach(function (type) {\n    if (!data[type]) return;\n    data[type] = depObjectify(data[type], type, warn);\n  });\n}\n\nfunction bugsTypos(bugs, warn) {\n  if (!bugs) return;\n  Object.keys(bugs).forEach(function (k) {\n    if (typos.bugs[k]) {\n      warn(\"typo\", k, typos.bugs[k], \"bugs\");\n      bugs[typos.bugs[k]] = bugs[k];\n      delete bugs[k];\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"script"}