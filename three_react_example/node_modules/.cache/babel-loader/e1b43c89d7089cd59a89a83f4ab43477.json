{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst LONG_TEST_COLOR = _chalk().default.reset.bold.bgRed; // Explicitly reset for these messages since they can get written out in the\n// middle of error logging\n\n\nconst FAIL_TEXT = 'FAIL';\nconst PASS_TEXT = 'PASS';\nconst FAIL = _chalk().default.supportsColor ? _chalk().default.reset.inverse.bold.red(\" \".concat(FAIL_TEXT, \" \")) : FAIL_TEXT;\nconst PASS = _chalk().default.supportsColor ? _chalk().default.reset.inverse.bold.green(\" \".concat(PASS_TEXT, \" \")) : PASS_TEXT;\n\nvar _default = (result, globalConfig, projectConfig) => {\n  const testPath = result.testFilePath;\n  const status = result.numFailingTests > 0 || result.testExecError ? FAIL : PASS;\n  const runTime = result.perfStats ? (result.perfStats.end - result.perfStats.start) / 1000 : null;\n  const testDetail = [];\n\n  if (runTime !== null && runTime > 5) {\n    testDetail.push(LONG_TEST_COLOR(runTime + 's'));\n  }\n\n  if (result.memoryUsage) {\n    const toMB = bytes => Math.floor(bytes / 1024 / 1024);\n\n    testDetail.push(\"\".concat(toMB(result.memoryUsage), \" MB heap size\"));\n  }\n\n  const projectDisplayName = projectConfig && projectConfig.displayName ? (0, _utils.printDisplayName)(projectConfig) + ' ' : '';\n  return \"\".concat(status, \" \").concat(projectDisplayName).concat((0, _utils.formatTestPath)(projectConfig ? projectConfig : globalConfig, testPath)) + (testDetail.length ? \" (\".concat(testDetail.join(', '), \")\") : '');\n};\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}