{"ast":null,"code":"'use strict';\n/**\n * @param {string} msg The message to wrap\n * @param {object} [opts]\n * @param {number|string} [opts.margin] Left margin\n * @param {number} [opts.width] Maximum characters per line including the margin\n */\n\nmodule.exports = (msg, opts = {}) => {\n  const tab = Number.isSafeInteger(parseInt(opts.margin)) ? new Array(parseInt(opts.margin)).fill(' ').join('') : opts.margin || '';\n  const width = opts.width || process.stdout.columns;\n  return (msg || '').split(/\\r?\\n/g).map(line => line.split(/\\s+/g).reduce((arr, w) => {\n    if (w.length + tab.length >= width || arr[arr.length - 1].length + w.length + 1 < width) arr[arr.length - 1] += \" \".concat(w);else arr.push(\"\".concat(tab).concat(w));\n    return arr;\n  }, [tab]).join('\\n')).join('\\n');\n};","map":null,"metadata":{},"sourceType":"script"}