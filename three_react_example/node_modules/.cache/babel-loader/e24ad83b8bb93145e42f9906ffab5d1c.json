{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getNoTestFoundVerbose;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _pluralize = _interopRequireDefault(require('./pluralize'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction getNoTestFoundVerbose(testRunData, globalConfig) {\n  const individualResults = testRunData.map(testRun => {\n    const stats = testRun.matches.stats || {};\n    const config = testRun.context.config;\n    const statsMessage = Object.keys(stats).map(key => {\n      if (key === 'roots' && config.roots.length === 1) {\n        return null;\n      }\n\n      const value = config[key];\n\n      if (value) {\n        const valueAsString = Array.isArray(value) ? value.join(', ') : String(value);\n        const matches = (0, _pluralize.default)('match', stats[key] || 0, 'es');\n        return \"  \".concat(key, \": \").concat(_chalk().default.yellow(valueAsString), \" - \").concat(matches);\n      }\n\n      return null;\n    }).filter(line => line).join('\\n');\n    return testRun.matches.total ? \"In \".concat(_chalk().default.bold(config.rootDir), \"\\n\") + \"  \".concat((0, _pluralize.default)('file', testRun.matches.total || 0, 's'), \" checked.\\n\") + statsMessage : \"No files found in \".concat(config.rootDir, \".\\n\") + \"Make sure Jest's configuration does not exclude this directory.\" + \"\\nTo set up Jest, make sure a package.json file exists.\\n\" + \"Jest Documentation: \" + \"facebook.github.io/jest/docs/configuration.html\";\n  });\n  let dataMessage;\n\n  if (globalConfig.runTestsByPath) {\n    dataMessage = \"Files: \".concat(globalConfig.nonFlagArgs.map(p => \"\\\"\".concat(p, \"\\\"\")).join(', '));\n  } else {\n    dataMessage = \"Pattern: \".concat(_chalk().default.yellow(globalConfig.testPathPattern), \" - 0 matches\");\n  }\n\n  return _chalk().default.bold('No tests found, exiting with code 1') + '\\n' + 'Run with `--passWithNoTests` to exit with code 0' + '\\n' + individualResults.join('\\n') + '\\n' + dataMessage;\n}","map":null,"metadata":{},"sourceType":"script"}