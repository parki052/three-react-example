{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n\n  _jestWatcher = function _jestWatcher() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass QuitPlugin extends _jestWatcher().BaseWatchPlugin {\n  constructor(options) {\n    super(options);\n\n    _defineProperty(this, 'isInternal', void 0);\n\n    this.isInternal = true;\n  }\n\n  run() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (typeof _this._stdin.setRawMode === 'function') {\n        _this._stdin.setRawMode(false);\n      }\n\n      _this._stdout.write('\\n');\n\n      process.exit(0);\n    })();\n  }\n\n  getUsageInfo() {\n    return {\n      key: 'q',\n      prompt: 'quit watch mode'\n    };\n  }\n\n}\n\nvar _default = QuitPlugin;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}