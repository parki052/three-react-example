{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getNoTestFound;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _pluralize = _interopRequireDefault(require('./pluralize'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction getNoTestFound(testRunData, globalConfig) {\n  const testFiles = testRunData.reduce((current, testRun) => current + (testRun.matches.total || 0), 0);\n  let dataMessage;\n\n  if (globalConfig.runTestsByPath) {\n    dataMessage = \"Files: \".concat(globalConfig.nonFlagArgs.map(p => \"\\\"\".concat(p, \"\\\"\")).join(', '));\n  } else {\n    dataMessage = \"Pattern: \".concat(_chalk().default.yellow(globalConfig.testPathPattern), \" - 0 matches\");\n  }\n\n  return _chalk().default.bold('No tests found, exiting with code 1') + '\\n' + 'Run with `--passWithNoTests` to exit with code 0' + '\\n' + \"In \".concat(_chalk().default.bold(globalConfig.rootDir)) + '\\n' + \"  \".concat((0, _pluralize.default)('file', testFiles, 's'), \" checked across \").concat((0, _pluralize.default)('project', testRunData.length, 's'), \". Run with `--verbose` for more details.\") + '\\n' + dataMessage;\n}","map":null,"metadata":{},"sourceType":"script"}