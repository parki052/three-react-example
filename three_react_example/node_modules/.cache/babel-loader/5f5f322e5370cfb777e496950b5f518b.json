{"ast":null,"code":"var os = require('os');\n\nvar utils = require('./lib/utils'); // All notifiers\n\n\nvar NotifySend = require('./notifiers/notifysend');\n\nvar NotificationCenter = require('./notifiers/notificationcenter');\n\nvar WindowsToaster = require('./notifiers/toaster');\n\nvar Growl = require('./notifiers/growl');\n\nvar WindowsBalloon = require('./notifiers/balloon');\n\nvar options = {\n  withFallback: true\n};\nvar osType = utils.isWSL() ? 'WSL' : os.type();\n\nswitch (osType) {\n  case 'Linux':\n    module.exports = new NotifySend(options);\n    module.exports.Notification = NotifySend;\n    break;\n\n  case 'Darwin':\n    module.exports = new NotificationCenter(options);\n    module.exports.Notification = NotificationCenter;\n    break;\n\n  case 'Windows_NT':\n    if (utils.isLessThanWin8()) {\n      module.exports = new WindowsBalloon(options);\n      module.exports.Notification = WindowsBalloon;\n    } else {\n      module.exports = new WindowsToaster(options);\n      module.exports.Notification = WindowsToaster;\n    }\n\n    break;\n\n  case 'WSL':\n    module.exports = new WindowsToaster(options);\n    module.exports.Notification = WindowsToaster;\n    break;\n\n  default:\n    if (os.type().match(/BSD$/)) {\n      module.exports = new NotifySend(options);\n      module.exports.Notification = NotifySend;\n    } else {\n      module.exports = new Growl(options);\n      module.exports.Notification = Growl;\n    }\n\n} // Expose notifiers to give full control.\n\n\nmodule.exports.NotifySend = NotifySend;\nmodule.exports.NotificationCenter = NotificationCenter;\nmodule.exports.WindowsToaster = WindowsToaster;\nmodule.exports.WindowsBalloon = WindowsBalloon;\nmodule.exports.Growl = Growl;","map":null,"metadata":{},"sourceType":"script"}