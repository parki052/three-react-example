{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = _default;\n\nfunction _fs() {\n  const data = _interopRequireDefault(require('fs'));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _createProcessObject = _interopRequireDefault(require('./createProcessObject'));\n\nvar _deepCyclicCopy = _interopRequireDefault(require('./deepCyclicCopy'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst DTRACE = Object.keys(global).filter(key => key.startsWith('DTRACE'));\n\nfunction _default(globalObject, globals) {\n  globalObject.process = (0, _createProcessObject.default)();\n  const symbol = globalObject.Symbol; // Keep a reference to some globals that Jest needs\n\n  Object.defineProperties(globalObject, {\n    [symbol.for('jest-native-promise')]: {\n      enumerable: false,\n      value: Promise,\n      writable: false\n    },\n    [symbol.for('jest-native-now')]: {\n      enumerable: false,\n      value: globalObject.Date.now.bind(globalObject.Date),\n      writable: false\n    },\n    [symbol.for('jest-native-read-file')]: {\n      enumerable: false,\n      value: _fs().default.readFileSync.bind(_fs().default),\n      writable: false\n    },\n    [symbol.for('jest-native-write-file')]: {\n      enumerable: false,\n      value: _fs().default.writeFileSync.bind(_fs().default),\n      writable: false\n    },\n    [symbol.for('jest-native-exists-file')]: {\n      enumerable: false,\n      value: _fs().default.existsSync.bind(_fs().default),\n      writable: false\n    },\n    'jest-symbol-do-not-touch': {\n      enumerable: false,\n      value: symbol,\n      writable: false\n    }\n  }); // Forward some APIs.\n\n  DTRACE.forEach(dtrace => {\n    // @ts-ignore: no index\n    globalObject[dtrace] = function (...args) {\n      // @ts-ignore: no index\n      return global[dtrace].apply(this, args);\n    };\n  }); // Forward some others (this breaks the sandbox but for now it's OK).\n\n  globalObject.Buffer = global.Buffer;\n  globalObject.setImmediate = global.setImmediate;\n  globalObject.clearImmediate = global.clearImmediate;\n  return Object.assign(globalObject, (0, _deepCyclicCopy.default)(globals));\n}","map":null,"metadata":{},"sourceType":"script"}