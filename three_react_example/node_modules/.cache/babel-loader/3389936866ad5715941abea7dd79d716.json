{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _os() {\n  const data = _interopRequireDefault(require('os'));\n\n  _os = function _os() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _realpathNative() {\n  const data = require('realpath-native');\n\n  _realpathNative = function _realpathNative() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst getCacheDirectory = () => {\n  const _process = process,\n        getuid = _process.getuid;\n\n  const tmpdir = _path().default.join((0, _realpathNative().sync)(_os().default.tmpdir()), 'jest');\n\n  if (getuid == null) {\n    return tmpdir;\n  } else {\n    // On some platforms tmpdir() is `/tmp`, causing conflicts between different\n    // users and permission issues. Adding an additional subdivision by UID can\n    // help.\n    return \"\".concat(tmpdir, \"_\").concat(getuid.call(process).toString(36));\n  }\n};\n\nvar _default = getCacheDirectory;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}