{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestConfig() {\n  const data = require('jest-config');\n\n  _jestConfig = function _jestConfig() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst stringifyOption = (option, map, linePrefix = '') => {\n  const optionDescription = \"  // \".concat(_jestConfig().descriptions[option]);\n  const stringifiedObject = \"\".concat(option, \": \").concat(JSON.stringify(map[option], null, 2));\n  return optionDescription + '\\n' + stringifiedObject.split('\\n').map(line => '  ' + linePrefix + line).join('\\n') + ',\\n';\n};\n\nconst generateConfigFile = results => {\n  const coverage = results.coverage,\n        clearMocks = results.clearMocks,\n        environment = results.environment;\n  const overrides = {};\n\n  if (coverage) {\n    Object.assign(overrides, {\n      coverageDirectory: 'coverage'\n    });\n  }\n\n  if (environment === 'node') {\n    Object.assign(overrides, {\n      testEnvironment: 'node'\n    });\n  }\n\n  if (clearMocks) {\n    Object.assign(overrides, {\n      clearMocks: true\n    });\n  }\n\n  const overrideKeys = Object.keys(overrides);\n  const properties = [];\n\n  for (const option in _jestConfig().descriptions) {\n    const opt = option;\n\n    if (overrideKeys.includes(opt)) {\n      properties.push(stringifyOption(opt, overrides));\n    } else {\n      properties.push(stringifyOption(opt, _jestConfig().defaults, '// '));\n    }\n  }\n\n  return '// For a detailed explanation regarding each configuration property, visit:\\n' + '// https://jestjs.io/docs/en/configuration.html\\n\\n' + 'module.exports = {\\n' + properties.join('\\n') + '};\\n';\n};\n\nvar _default = generateConfigFile;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}