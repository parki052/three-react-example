{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.errorMessage = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestGetType() {\n  const data = _interopRequireDefault(require('jest-get-type'));\n\n  _jestGetType = function _jestGetType() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _utils = require('./utils');\n\nvar _condition = require('./condition');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst errorMessage = (option, received, defaultValue, options, path) => {\n  const conditions = (0, _condition.getValues)(defaultValue);\n  const validTypes = Array.from(new Set(conditions.map(_jestGetType().default)));\n  const message = \"  Option \".concat(_chalk().default.bold(\"\\\"\".concat(path && path.length > 0 ? path.join('.') + '.' : '').concat(option, \"\\\"\")), \" must be of type:\\n    \").concat(validTypes.map(e => _chalk().default.bold.green(e)).join(' or '), \"\\n  but instead received:\\n    \").concat(_chalk().default.bold.red((0, _jestGetType().default)(received)), \"\\n\\n  Example:\\n\").concat(formatExamples(option, conditions));\n  const comment = options.comment;\n  const name = options.title && options.title.error || _utils.ERROR;\n  throw new _utils.ValidationError(name, message, comment);\n};\n\nexports.errorMessage = errorMessage;\n\nfunction formatExamples(option, examples) {\n  return examples.map(e => \"  {\\n    \".concat(_chalk().default.bold(\"\\\"\".concat(option, \"\\\"\")), \": \").concat(_chalk().default.bold((0, _utils.formatPrettyObject)(e)), \"\\n  }\")).join(\"\\n\\n  or\\n\\n\");\n}","map":null,"metadata":{},"sourceType":"script"}