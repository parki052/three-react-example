{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createInstrumenter = createInstrumenter;\nObject.defineProperty(exports, \"defaultOpts\", {\n  enumerable: true,\n  get: function get() {\n    return _instrumenter.defaultOpts;\n  }\n});\nObject.defineProperty(exports, \"programVisitor\", {\n  enumerable: true,\n  get: function get() {\n    return _visitor.default;\n  }\n});\nObject.defineProperty(exports, \"readInitialCoverage\", {\n  enumerable: true,\n  get: function get() {\n    return _readCoverage.default;\n  }\n});\n\nvar _instrumenter = _interopRequireWildcard(require(\"./instrumenter\"));\n\nvar _visitor = _interopRequireDefault(require(\"./visitor\"));\n\nvar _readCoverage = _interopRequireDefault(require(\"./read-coverage\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n/**\n * createInstrumenter creates a new instrumenter with the\n * supplied options.\n * @param {Object} opts - instrumenter options. See the documentation\n * for the Instrumenter class.\n */\n\n\nfunction createInstrumenter(opts) {\n  return new _instrumenter.default(opts);\n}","map":null,"metadata":{},"sourceType":"script"}