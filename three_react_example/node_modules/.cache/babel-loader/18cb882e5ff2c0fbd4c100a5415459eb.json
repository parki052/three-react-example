{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function _jestUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _array = _interopRequireDefault(require('./table/array'));\n\nvar _template = _interopRequireDefault(require('./table/template'));\n\nvar _validation = require('./validation');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\nvar _default = (cb, supportsDone = true) => (table, ...taggedTemplateData) => function eachBind(title, test, timeout) {\n  try {\n    const tests = isArrayTable(taggedTemplateData) ? buildArrayTests(title, table) : buildTemplateTests(title, table, taggedTemplateData);\n    return tests.forEach(row => cb(row.title, applyArguments(supportsDone, row.arguments, test), timeout));\n  } catch (e) {\n    const error = new (_jestUtil().ErrorWithStack)(e.message, eachBind);\n    return cb(title, () => {\n      throw error;\n    });\n  }\n};\n\nexports.default = _default;\n\nconst isArrayTable = data => data.length === 0;\n\nconst buildArrayTests = (title, table) => {\n  (0, _validation.validateArrayTable)(table);\n  return (0, _array.default)(title, table);\n};\n\nconst buildTemplateTests = (title, table, taggedTemplateData) => {\n  const headings = getHeadingKeys(table[0]);\n  (0, _validation.validateTemplateTableHeadings)(headings, taggedTemplateData);\n  return (0, _template.default)(title, headings, taggedTemplateData);\n};\n\nconst getHeadingKeys = headings => headings.replace(/\\s/g, '').split('|');\n\nconst applyArguments = (supportsDone, params, test) => supportsDone && params.length < test.length ? done => test(...params, done) : () => test(...params);","map":null,"metadata":{},"sourceType":"script"}