{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n\n  _jestWatcher = function _jestWatcher() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass UpdateSnapshotsPlugin extends _jestWatcher().BaseWatchPlugin {\n  constructor(options) {\n    super(options);\n\n    _defineProperty(this, '_hasSnapshotFailure', void 0);\n\n    _defineProperty(this, 'isInternal', void 0);\n\n    this.isInternal = true;\n    this._hasSnapshotFailure = false;\n  }\n\n  run(_globalConfig, updateConfigAndRun) {\n    updateConfigAndRun({\n      updateSnapshot: 'all'\n    });\n    return Promise.resolve(false);\n  }\n\n  apply(hooks) {\n    hooks.onTestRunComplete(results => {\n      this._hasSnapshotFailure = results.snapshot.failure;\n    });\n  }\n\n  getUsageInfo() {\n    if (this._hasSnapshotFailure) {\n      return {\n        key: 'u',\n        prompt: 'update failing snapshots'\n      };\n    }\n\n    return null;\n  }\n\n}\n\nvar _default = UpdateSnapshotsPlugin;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}