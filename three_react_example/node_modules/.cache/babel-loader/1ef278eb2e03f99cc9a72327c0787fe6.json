{"ast":null,"code":"'use strict';\n\nconst ESC = '\\x1B';\nconst CSI = \"\".concat(ESC, \"[\");\nconst beep = '\\u0007';\nconst cursor = {\n  to(x, y) {\n    if (!y) return \"\".concat(CSI).concat(x + 1, \"G\");\n    return \"\".concat(CSI).concat(y + 1, \";\").concat(x + 1, \"H\");\n  },\n\n  move(x, y) {\n    let ret = '';\n    if (x < 0) ret += \"\".concat(CSI).concat(-x, \"D\");else if (x > 0) ret += \"\".concat(CSI).concat(x, \"C\");\n    if (y < 0) ret += \"\".concat(CSI).concat(-y, \"A\");else if (y > 0) ret += \"\".concat(CSI).concat(y, \"B\");\n    return ret;\n  },\n\n  up: (count = 1) => \"\".concat(CSI).concat(count, \"A\"),\n  down: (count = 1) => \"\".concat(CSI).concat(count, \"B\"),\n  forward: (count = 1) => \"\".concat(CSI).concat(count, \"C\"),\n  backward: (count = 1) => \"\".concat(CSI).concat(count, \"D\"),\n  nextLine: (count = 1) => \"\".concat(CSI, \"E\").repeat(count),\n  prevLine: (count = 1) => \"\".concat(CSI, \"F\").repeat(count),\n  left: \"\".concat(CSI, \"G\"),\n  hide: \"\".concat(CSI, \"?25l\"),\n  show: \"\".concat(CSI, \"?25h\"),\n  save: \"\".concat(ESC, \"7\"),\n  restore: \"\".concat(ESC, \"8\")\n};\nconst scroll = {\n  up: (count = 1) => \"\".concat(CSI, \"S\").repeat(count),\n  down: (count = 1) => \"\".concat(CSI, \"T\").repeat(count)\n};\nconst erase = {\n  screen: \"\".concat(CSI, \"2J\"),\n  up: (count = 1) => \"\".concat(CSI, \"1J\").repeat(count),\n  down: (count = 1) => \"\".concat(CSI, \"J\").repeat(count),\n  line: \"\".concat(CSI, \"2K\"),\n  lineEnd: \"\".concat(CSI, \"K\"),\n  lineStart: \"\".concat(CSI, \"1K\"),\n\n  lines(count) {\n    let clear = '';\n\n    for (let i = 0; i < count; i++) clear += this.line + (i < count - 1 ? cursor.up() : '');\n\n    if (count) clear += cursor.left;\n    return clear;\n  }\n\n};\nmodule.exports = {\n  cursor,\n  scroll,\n  erase,\n  beep\n};","map":null,"metadata":{},"sourceType":"script"}