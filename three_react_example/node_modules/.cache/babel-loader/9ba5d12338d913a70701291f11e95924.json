{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestChangedFiles() {\n  const data = require('jest-changed-files');\n\n  _jestChangedFiles = function _jestChangedFiles() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function _jestMessageUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar _default = (globalConfig, configs) => {\n  if (globalConfig.onlyChanged) {\n    const allRootsForAllProjects = configs.reduce((roots, config) => [...roots, ...(config.roots || [])], []);\n    return (0, _jestChangedFiles().getChangedFilesForRoots)(allRootsForAllProjects, {\n      changedSince: globalConfig.changedSince,\n      lastCommit: globalConfig.lastCommit,\n      withAncestor: globalConfig.changedFilesWithAncestor\n    }).catch(e => {\n      const message = (0, _jestMessageUtil().formatExecError)(e, configs[0], {\n        noStackTrace: true\n      }).split('\\n').filter(line => !line.includes('Command failed:')).join('\\n');\n      console.error(_chalk().default.red(\"\\n\\n\".concat(message)));\n      process.exit(1); // We do process.exit, so this is dead code\n\n      return Promise.reject(e);\n    });\n  }\n\n  return undefined;\n};\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}