{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.findSiblingsWithFileExtension = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n\n  _slash = function _slash() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _glob() {\n  const data = _interopRequireDefault(require('glob'));\n\n  _glob = function _glob() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst findSiblingsWithFileExtension = (moduleFileExtensions, from, moduleName) => {\n  if (!_path().default.isAbsolute(moduleName) && _path().default.extname(moduleName) === '') {\n    const dirname = _path().default.dirname(from);\n\n    const pathToModule = _path().default.resolve(dirname, moduleName);\n\n    try {\n      const slashedDirname = (0, _slash().default)(dirname);\n\n      const matches = _glob().default.sync(\"\".concat(pathToModule, \".*\")).map(match => (0, _slash().default)(match)).map(match => {\n        const relativePath = _path().default.posix.relative(slashedDirname, match);\n\n        return _path().default.posix.dirname(match) === slashedDirname ? \"./\".concat(relativePath) : relativePath;\n      }).map(match => \"\\t'\".concat(match, \"'\")).join('\\n');\n\n      if (matches) {\n        const foundMessage = \"\\n\\nHowever, Jest was able to find:\\n\".concat(matches);\n        const mappedModuleFileExtensions = moduleFileExtensions.map(ext => \"'\".concat(ext, \"'\")).join(', ');\n        return foundMessage + \"\\n\\nYou might want to include a file extension in your import, or update your 'moduleFileExtensions', which is currently \" + \"[\".concat(mappedModuleFileExtensions, \"].\\n\\nSee https://jestjs.io/docs/en/configuration#modulefileextensions-array-string\");\n      }\n    } catch (ignored) {}\n  }\n\n  return '';\n};\n\nexports.findSiblingsWithFileExtension = findSiblingsWithFileExtension;","map":null,"metadata":{},"sourceType":"script"}