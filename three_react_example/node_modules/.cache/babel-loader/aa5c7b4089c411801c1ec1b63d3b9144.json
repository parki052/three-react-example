{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repos\\\\three_react\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Three from \"three\";\nimport \"./index.css\";\nimport { RGBA_ASTC_10x5_Format } from \"three\";\nimport { animate, fitCanvasToDisplaySize } from './App/initialization';\n\nclass App extends Component {\n  componentDidMount() {\n    let scene = new Three.Scene();\n    let camera = new Three.PerspectiveCamera(75, 1, 1, 1000);\n    let renderer = new Three.WebGLRenderer();\n    this.el.appendChild(renderer.domElement);\n    let floorGeometry = new Three.BoxGeometry(10, 1, 10);\n    let floorMaterial = new Three.MeshStandardMaterial();\n    let floor = new Three.Mesh(floorGeometry, floorMaterial);\n    let circleGeometry = new Three.CircleGeometry(1, 50, 1, 1);\n    let circleMaterial = new Three.MeshStandardMaterial();\n    let circle = new Three.Mesh(circleGeometry, circleMaterial);\n    let light = new Three.AmbientLight(\"blue\");\n    scene.add(light);\n    scene.add(floor);\n    scene.add(circle);\n    camera.position.z = 5;\n    camera.position.y = 2;\n    animate(scene, renderer, camera);\n    fitCanvasToDisplaySize(true, renderer, camera);\n    requestAnimationFrame(animate);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: ref => this.el = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["C:\\Repos\\three_react\\src\\index.js"],"names":["React","Component","ReactDOM","Three","RGBA_ASTC_10x5_Format","animate","fitCanvasToDisplaySize","App","componentDidMount","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","el","appendChild","domElement","floorGeometry","BoxGeometry","floorMaterial","MeshStandardMaterial","floor","Mesh","circleGeometry","CircleGeometry","circleMaterial","circle","light","AmbientLight","add","position","z","y","requestAnimationFrame","render","ref","rootElement","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,aAAP;AACA,SAASC,qBAAT,QAAsC,OAAtC;AACA,SAAQC,OAAR,EAAiBC,sBAAjB,QAA8C,sBAA9C;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,KAAK,GAAG,IAAIN,KAAK,CAACO,KAAV,EAAZ;AACA,QAAIC,MAAM,GAAG,IAAIR,KAAK,CAACS,iBAAV,CAA4B,EAA5B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,IAAtC,CAAb;AACA,QAAIC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAV,EAAf;AAEA,SAAKC,EAAL,CAAQC,WAAR,CAAoBH,QAAQ,CAACI,UAA7B;AAEA,QAAIC,aAAa,GAAG,IAAIf,KAAK,CAACgB,WAAV,CAAsB,EAAtB,EAA0B,CAA1B,EAA6B,EAA7B,CAApB;AACA,QAAIC,aAAa,GAAG,IAAIjB,KAAK,CAACkB,oBAAV,EAApB;AACA,QAAIC,KAAK,GAAG,IAAInB,KAAK,CAACoB,IAAV,CAAeL,aAAf,EAA8BE,aAA9B,CAAZ;AAEA,QAAII,cAAc,GAAG,IAAIrB,KAAK,CAACsB,cAAV,CAAyB,CAAzB,EAA4B,EAA5B,EAAgC,CAAhC,EAAmC,CAAnC,CAArB;AACA,QAAIC,cAAc,GAAG,IAAIvB,KAAK,CAACkB,oBAAV,EAArB;AACA,QAAIM,MAAM,GAAG,IAAIxB,KAAK,CAACoB,IAAV,CAAeC,cAAf,EAA+BE,cAA/B,CAAb;AAEA,QAAIE,KAAK,GAAG,IAAIzB,KAAK,CAAC0B,YAAV,CAAuB,MAAvB,CAAZ;AAEApB,IAAAA,KAAK,CAACqB,GAAN,CAAUF,KAAV;AACAnB,IAAAA,KAAK,CAACqB,GAAN,CAAUR,KAAV;AACAb,IAAAA,KAAK,CAACqB,GAAN,CAAUH,MAAV;AACAhB,IAAAA,MAAM,CAACoB,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;AACArB,IAAAA,MAAM,CAACoB,QAAP,CAAgBE,CAAhB,GAAoB,CAApB;AAIA5B,IAAAA,OAAO,CAACI,KAAD,EAAQI,QAAR,EAAkBF,MAAlB,CAAP;AAEAL,IAAAA,sBAAsB,CAAC,IAAD,EAAOO,QAAP,EAAiBF,MAAjB,CAAtB;AACAuB,IAAAA,qBAAqB,CAAC7B,OAAD,CAArB;AACD;;AACD8B,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,GAAG,EAAEC,GAAG,IAAK,KAAKrB,EAAL,GAAUqB,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAjCyB;;AAoC5B,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACArC,QAAQ,CAACiC,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBE,WAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Three from \"three\";\nimport \"./index.css\";\nimport { RGBA_ASTC_10x5_Format } from \"three\";\nimport {animate, fitCanvasToDisplaySize} from './App/initialization';\n\nclass App extends Component {\n  componentDidMount() {\t\n    let scene = new Three.Scene();\n    let camera = new Three.PerspectiveCamera(75, 1, 1, 1000);\n    let renderer = new Three.WebGLRenderer();\n\t\n    this.el.appendChild(renderer.domElement);\n\n    let floorGeometry = new Three.BoxGeometry(10, 1, 10);\n    let floorMaterial = new Three.MeshStandardMaterial();\n    let floor = new Three.Mesh(floorGeometry, floorMaterial);\n\n    let circleGeometry = new Three.CircleGeometry(1, 50, 1, 1);\n    let circleMaterial = new Three.MeshStandardMaterial();\n    let circle = new Three.Mesh(circleGeometry, circleMaterial);\n\n    let light = new Three.AmbientLight(\"blue\");\n\n    scene.add(light);\n    scene.add(floor);\n    scene.add(circle);\n    camera.position.z = 5;\n    camera.position.y = 2;\n\n\n\n    animate(scene, renderer, camera);\n\n    fitCanvasToDisplaySize(true, renderer, camera);\n    requestAnimationFrame(animate);\n  }\n  render() {\n    return <div ref={ref => (this.el = ref)}/>;\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}