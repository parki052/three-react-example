{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = queueRunner;\n\nvar _PCancelable = _interopRequireDefault(require('./PCancelable'));\n\nvar _pTimeout = _interopRequireDefault(require('./pTimeout'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Promise = global[Symbol.for('jest-native-promise')] || global.Promise;\n\nfunction queueRunner(options) {\n  const token = new _PCancelable.default((onCancel, resolve) => {\n    onCancel(resolve);\n  });\n\n  const mapper = ({\n    fn,\n    timeout,\n    initError = new Error()\n  }) => {\n    let promise = new Promise(resolve => {\n      const next = function next(...args) {\n        const err = args[0];\n\n        if (err) {\n          options.fail.apply(null, args);\n        }\n\n        resolve();\n      };\n\n      next.fail = function (...args) {\n        options.fail.apply(null, args);\n        resolve();\n      };\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve();\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise;\n    }\n\n    const timeoutMs = timeout();\n    return (0, _pTimeout.default)(promise, timeoutMs, options.clearTimeout, options.setTimeout, () => {\n      initError.message = 'Timeout - Async callback was not invoked within the ' + timeoutMs + 'ms timeout specified by jest.setTimeout.';\n      initError.stack = initError.message + initError.stack;\n      options.onException(initError);\n    });\n  };\n\n  const result = options.queueableFns.reduce((promise, fn) => promise.then(() => mapper(fn)), Promise.resolve());\n  return {\n    cancel: token.cancel.bind(token),\n    catch: result.catch.bind(result),\n    then: result.then.bind(result)\n  };\n}","map":null,"metadata":{},"sourceType":"script"}