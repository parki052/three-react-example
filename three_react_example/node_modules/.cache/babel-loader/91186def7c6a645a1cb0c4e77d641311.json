{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\n\nconst pify = require('pify');\n\nfunction type(fn, fn2, fp) {\n  if (typeof fp !== 'string') {\n    return Promise.reject(new TypeError(\"Expected a string, got \".concat(typeof fp)));\n  }\n\n  return pify(fs[fn])(fp).then(stats => stats[fn2]()).catch(err => {\n    if (err.code === 'ENOENT') {\n      return false;\n    }\n\n    throw err;\n  });\n}\n\nfunction typeSync(fn, fn2, fp) {\n  if (typeof fp !== 'string') {\n    throw new TypeError(\"Expected a string, got \".concat(typeof fp));\n  }\n\n  try {\n    return fs[fn](fp)[fn2]();\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      return false;\n    }\n\n    throw err;\n  }\n}\n\nexports.file = type.bind(null, 'stat', 'isFile');\nexports.dir = type.bind(null, 'stat', 'isDirectory');\nexports.symlink = type.bind(null, 'lstat', 'isSymbolicLink');\nexports.fileSync = typeSync.bind(null, 'statSync', 'isFile');\nexports.dirSync = typeSync.bind(null, 'statSync', 'isDirectory');\nexports.symlinkSync = typeSync.bind(null, 'lstatSync', 'isSymbolicLink');","map":null,"metadata":{},"sourceType":"script"}