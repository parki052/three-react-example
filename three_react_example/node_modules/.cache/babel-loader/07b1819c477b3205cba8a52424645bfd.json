{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getPath = getPath;\nexports.default = void 0;\n\nfunction _prettyFormat() {\n  const data = _interopRequireDefault(require('pretty-format'));\n\n  _prettyFormat = function _prettyFormat() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestGetType() {\n  const data = require('jest-get-type');\n\n  _jestGetType = function _jestGetType() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\nvar _default = (title, headings, row) => {\n  const table = convertRowToTable(row, headings);\n  const templates = convertTableToTemplates(table, headings);\n  return templates.map(template => ({\n    arguments: [template],\n    title: interpolate(title, template)\n  }));\n};\n\nexports.default = _default;\n\nconst convertRowToTable = (row, headings) => Array.from({\n  length: row.length / headings.length\n}).map((_, index) => row.slice(index * headings.length, index * headings.length + headings.length));\n\nconst convertTableToTemplates = (table, headings) => table.map(row => row.reduce((acc, value, index) => Object.assign(acc, {\n  [headings[index]]: value\n}), {}));\n\nconst interpolate = (title, template) => Object.keys(template).reduce(getMatchingKeyPaths(title), []) // aka flatMap\n.reduce(replaceKeyPathWithValue(template), title);\n\nconst getMatchingKeyPaths = title => (matches, key) => matches.concat(title.match(new RegExp(\"\\\\$\".concat(key, \"[\\\\.\\\\w]*\"), 'g')) || []);\n\nconst replaceKeyPathWithValue = template => (title, match) => {\n  const keyPath = match.replace('$', '').split('.');\n  const value = getPath(template, keyPath);\n\n  if ((0, _jestGetType().isPrimitive)(value)) {\n    return title.replace(match, String(value));\n  }\n\n  return title.replace(match, (0, _prettyFormat().default)(value, {\n    maxDepth: 1,\n    min: true\n  }));\n};\n/* eslint import/export: 0*/\n\n\nfunction getPath(template, [head, ...tail]) {\n  if (!head || !template.hasOwnProperty || !template.hasOwnProperty(head)) return template;\n  return getPath(template[head], tail);\n}","map":null,"metadata":{},"sourceType":"script"}