{"ast":null,"code":"module.exports = normalize;\n\nvar fixer = require(\"./fixer\");\n\nnormalize.fixer = fixer;\n\nvar makeWarning = require(\"./make_warning\");\n\nvar fieldsToFix = ['name', 'version', 'description', 'repository', 'modules', 'scripts', 'files', 'bin', 'man', 'bugs', 'keywords', 'readme', 'homepage', 'license'];\nvar otherThingsToFix = ['dependencies', 'people', 'typos'];\nvar thingsToFix = fieldsToFix.map(function (fieldName) {\n  return ucFirst(fieldName) + \"Field\";\n}); // two ways to do this in CoffeeScript on only one line, sub-70 chars:\n// thingsToFix = fieldsToFix.map (name) -> ucFirst(name) + \"Field\"\n// thingsToFix = (ucFirst(name) + \"Field\" for name in fieldsToFix)\n\nthingsToFix = thingsToFix.concat(otherThingsToFix);\n\nfunction normalize(data, warn, strict) {\n  if (warn === true) warn = null, strict = true;\n  if (!strict) strict = false;\n  if (!warn || data.private) warn = function (msg) {\n    /* noop */\n  };\n\n  if (data.scripts && data.scripts.install === \"node-gyp rebuild\" && !data.scripts.preinstall) {\n    data.gypfile = true;\n  }\n\n  fixer.warn = function () {\n    warn(makeWarning.apply(null, arguments));\n  };\n\n  thingsToFix.forEach(function (thingName) {\n    fixer[\"fix\" + ucFirst(thingName)](data, strict);\n  });\n  data._id = data.name + \"@\" + data.version;\n}\n\nfunction ucFirst(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","map":null,"metadata":{},"sourceType":"script"}