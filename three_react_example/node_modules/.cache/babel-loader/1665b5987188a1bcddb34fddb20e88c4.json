{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.worker = worker;\nexports.getSha1 = getSha1;\n\nfunction _crypto() {\n  const data = _interopRequireDefault(require('crypto'));\n\n  _crypto = function _crypto() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gracefulFs() {\n  const data = _interopRequireDefault(require('graceful-fs'));\n\n  _gracefulFs = function _gracefulFs() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _blacklist = _interopRequireDefault(require('./blacklist'));\n\nvar _constants = _interopRequireDefault(require('./constants'));\n\nvar dependencyExtractor = _interopRequireWildcard(require('./lib/dependencyExtractor'));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nconst PACKAGE_JSON = _path().default.sep + 'package.json';\nlet hasteImpl = null;\nlet hasteImplModulePath = null;\n\nfunction sha1hex(content) {\n  return _crypto().default.createHash('sha1').update(content).digest('hex');\n}\n\nfunction worker(_x) {\n  return _worker.apply(this, arguments);\n}\n\nfunction _worker() {\n  _worker = _asyncToGenerator(function* (data) {\n    if (data.hasteImplModulePath && data.hasteImplModulePath !== hasteImplModulePath) {\n      if (hasteImpl) {\n        throw new Error('jest-haste-map: hasteImplModulePath changed');\n      }\n\n      hasteImplModulePath = data.hasteImplModulePath;\n      hasteImpl = require(hasteImplModulePath);\n    }\n\n    let content;\n    let dependencies;\n    let id;\n    let module;\n    let sha1;\n    const computeDependencies = data.computeDependencies,\n          computeSha1 = data.computeSha1,\n          rootDir = data.rootDir,\n          filePath = data.filePath;\n\n    const getContent = () => {\n      if (content === undefined) {\n        content = _gracefulFs().default.readFileSync(filePath, 'utf8');\n      }\n\n      return content;\n    };\n\n    if (filePath.endsWith(PACKAGE_JSON)) {\n      // Process a package.json that is returned as a PACKAGE type with its name.\n      try {\n        const fileData = JSON.parse(getContent());\n\n        if (fileData.name) {\n          const relativeFilePath = _path().default.relative(rootDir, filePath);\n\n          id = fileData.name;\n          module = [relativeFilePath, _constants.default.PACKAGE];\n        }\n      } catch (err) {\n        throw new Error(\"Cannot parse \".concat(filePath, \" as JSON: \").concat(err.message));\n      }\n    } else if (!_blacklist.default.has(filePath.substr(filePath.lastIndexOf('.')))) {\n      // Process a random file that is returned as a MODULE.\n      if (hasteImpl) {\n        id = hasteImpl.getHasteName(filePath);\n      }\n\n      if (computeDependencies) {\n        const content = getContent();\n        dependencies = Array.from(data.dependencyExtractor ? require(data.dependencyExtractor).extract(content, filePath, dependencyExtractor.extract) : dependencyExtractor.extract(content));\n      }\n\n      if (id) {\n        const relativeFilePath = _path().default.relative(rootDir, filePath);\n\n        module = [relativeFilePath, _constants.default.MODULE];\n      }\n    } // If a SHA-1 is requested on update, compute it.\n\n\n    if (computeSha1) {\n      sha1 = sha1hex(getContent() || _gracefulFs().default.readFileSync(filePath));\n    }\n\n    return {\n      dependencies,\n      id,\n      module,\n      sha1\n    };\n  });\n  return _worker.apply(this, arguments);\n}\n\nfunction getSha1(_x2) {\n  return _getSha.apply(this, arguments);\n}\n\nfunction _getSha() {\n  _getSha = _asyncToGenerator(function* (data) {\n    const sha1 = data.computeSha1 ? sha1hex(_gracefulFs().default.readFileSync(data.filePath)) : null;\n    return {\n      dependencies: undefined,\n      id: undefined,\n      module: undefined,\n      sha1\n    };\n  });\n  return _getSha.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"script"}