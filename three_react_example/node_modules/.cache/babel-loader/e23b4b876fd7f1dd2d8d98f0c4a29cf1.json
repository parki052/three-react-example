{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = _default;\n\nfunction _istanbulLibInstrument() {\n  const data = require('istanbul-lib-instrument');\n\n  _istanbulLibInstrument = function _istanbulLibInstrument() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _istanbulLibCoverage() {\n  const data = require('istanbul-lib-coverage');\n\n  _istanbulLibCoverage = function _istanbulLibCoverage() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _transform() {\n  const data = require('@jest/transform');\n\n  _transform = function _transform() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction _default(source, filename, globalConfig, config, changedFiles) {\n  const coverageOptions = {\n    changedFiles,\n    collectCoverage: globalConfig.collectCoverage,\n    collectCoverageFrom: globalConfig.collectCoverageFrom,\n    collectCoverageOnlyFrom: globalConfig.collectCoverageOnlyFrom\n  };\n  let coverageWorkerResult = null;\n\n  if ((0, _transform().shouldInstrument)(filename, coverageOptions, config)) {\n    // Transform file with instrumentation to make sure initial coverage data is well mapped to original code.\n    const _transformSource = new (_transform().ScriptTransformer)(config).transformSource(filename, source, true),\n          code = _transformSource.code,\n          mapCoverage = _transformSource.mapCoverage,\n          sourceMapPath = _transformSource.sourceMapPath;\n\n    const extracted = (0, _istanbulLibInstrument().readInitialCoverage)(code); // Check extracted initial coverage is not null, this can happen when using /* istanbul ignore file */\n\n    if (extracted) {\n      coverageWorkerResult = {\n        coverage: (0, _istanbulLibCoverage().createFileCoverage)(extracted.coverageData),\n        sourceMapPath: mapCoverage ? sourceMapPath : null\n      };\n    }\n  }\n\n  return coverageWorkerResult;\n}","map":null,"metadata":{},"sourceType":"script"}