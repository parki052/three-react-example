{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function _jestUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst preRunMessageRemove = _jestUtil().preRunMessage.remove;\n\nclass BaseReporter {\n  constructor() {\n    _defineProperty(this, '_error', void 0);\n  }\n\n  log(message) {\n    process.stderr.write(message + '\\n');\n  }\n\n  onRunStart(_results, _options) {\n    preRunMessageRemove(process.stderr);\n  }\n\n  onTestResult(_test, _testResult, _results) {}\n\n  onTestStart(_test) {}\n\n  onRunComplete(_contexts, _aggregatedResults) {}\n\n  _setError(error) {\n    this._error = error;\n  } // Return an error that occurred during reporting. This error will\n  // define whether the test run was successful or failed.\n\n\n  getLastError() {\n    return this._error;\n  }\n\n}\n\nexports.default = BaseReporter;","map":null,"metadata":{},"sourceType":"script"}