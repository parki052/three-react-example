{"ast":null,"code":"'use strict';\n\nclass RecrawlWarning {\n  constructor(root, count) {\n    this.root = root;\n    this.count = count;\n  }\n\n  static findByRoot(root) {\n    for (let i = 0; i < this.RECRAWL_WARNINGS.length; i++) {\n      let warning = this.RECRAWL_WARNINGS[i];\n\n      if (warning.root === root) {\n        return warning;\n      }\n    }\n  }\n\n  static isRecrawlWarningDupe(warningMessage) {\n    if (typeof warningMessage !== 'string') {\n      return false;\n    }\n\n    let match = warningMessage.match(this.REGEXP);\n\n    if (!match) {\n      return false;\n    }\n\n    let count = Number(match[1]);\n    let root = match[2];\n    let warning = this.findByRoot(root);\n\n    if (warning) {\n      // only keep the highest count, assume count to either stay the same or\n      // increase.\n      if (warning.count >= count) {\n        return true;\n      } else {\n        // update the existing warning to the latest (highest) count\n        warning.count = count;\n        return false;\n      }\n    } else {\n      this.RECRAWL_WARNINGS.push(new RecrawlWarning(root, count));\n      return false;\n    }\n  }\n\n}\n\nRecrawlWarning.RECRAWL_WARNINGS = [];\nRecrawlWarning.REGEXP = /Recrawled this watch (\\d+) times, most recently because:\\n([^:]+)/;\nmodule.exports = RecrawlWarning;","map":null,"metadata":{},"sourceType":"script"}