{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nObject.defineProperty(exports, 'bind', {\n  enumerable: true,\n  get: function get() {\n    return _bind.default;\n  }\n});\nexports.default = void 0;\n\nfunction _types() {\n  const data = require('@jest/types');\n\n  _types = function _types() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _bind = _interopRequireDefault(require('./bind'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\nconst install = (g, table, ...data) => {\n  const test = (title, test, timeout) => (0, _bind.default)(g.test)(table, ...data)(title, test, timeout);\n\n  test.skip = (0, _bind.default)(g.test.skip)(table, ...data);\n  test.only = (0, _bind.default)(g.test.only)(table, ...data);\n\n  const it = (title, test, timeout) => (0, _bind.default)(g.it)(table, ...data)(title, test, timeout);\n\n  it.skip = (0, _bind.default)(g.it.skip)(table, ...data);\n  it.only = (0, _bind.default)(g.it.only)(table, ...data);\n  const xit = (0, _bind.default)(g.xit)(table, ...data);\n  const fit = (0, _bind.default)(g.fit)(table, ...data);\n  const xtest = (0, _bind.default)(g.xtest)(table, ...data);\n\n  const describe = (title, suite, timeout) => (0, _bind.default)(g.describe, false)(table, ...data)(title, suite, timeout);\n\n  describe.skip = (0, _bind.default)(g.describe.skip, false)(table, ...data);\n  describe.only = (0, _bind.default)(g.describe.only, false)(table, ...data);\n  const fdescribe = (0, _bind.default)(g.fdescribe, false)(table, ...data);\n  const xdescribe = (0, _bind.default)(g.xdescribe, false)(table, ...data);\n  return {\n    describe,\n    fdescribe,\n    fit,\n    it,\n    test,\n    xdescribe,\n    xit,\n    xtest\n  };\n};\n\nconst each = (table, ...data) => install(global, table, ...data);\n\neach.withGlobal = g => (table, ...data) => install(g, table, ...data);\n\nvar _default = each;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}