{"ast":null,"code":"let pnp;\n\ntry {\n  pnp = require(\"pnpapi\");\n} catch (error) {// not in PnP; not a problem\n}\n\nlet defaultResolver;\n\nfunction requireDefaultResolver() {\n  if (!defaultResolver) {\n    try {\n      defaultResolver = require(\"jest-resolve/build/defaultResolver\").default;\n    } catch (error) {\n      defaultResolver = require(\"jest-resolve/build/default_resolver\").default;\n    }\n  }\n\n  return defaultResolver;\n}\n\nmodule.exports = (request, options) => {\n  const basedir = options.basedir,\n        defaultResolver = options.defaultResolver,\n        extensions = options.extensions;\n\n  if (pnp) {\n    const resolution = pnp.resolveRequest(request, \"\".concat(basedir, \"/\"), {\n      extensions\n    }); // When the request is a native module, Jest expects to get the string back unmodified, but pnp returns null instead.\n\n    if (resolution === null) return request;\n    return resolution;\n  } else {\n    if (!defaultResolver) defaultResolver = requireDefaultResolver();\n    return defaultResolver(request, options);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}