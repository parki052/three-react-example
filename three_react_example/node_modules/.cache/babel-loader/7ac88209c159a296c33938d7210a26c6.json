{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n\n  _jestWatcher = function _jestWatcher() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar _default = (pipe, stdin = process.stdin) => new Promise((resolve, reject) => {\n  if (typeof stdin.setRawMode === 'function') {\n    const messages = [_chalk().default.red('There are deprecation warnings.\\n'), _chalk().default.dim(' \\u203A Press ') + 'Enter' + _chalk().default.dim(' to continue.'), _chalk().default.dim(' \\u203A Press ') + 'Esc' + _chalk().default.dim(' to exit.')];\n    pipe.write(messages.join('\\n'));\n    stdin.setRawMode(true);\n    stdin.resume();\n    stdin.setEncoding('utf8');\n    stdin.on('data', key => {\n      if (key === _jestWatcher().KEYS.ENTER) {\n        resolve();\n      } else if ([_jestWatcher().KEYS.ESCAPE, _jestWatcher().KEYS.CONTROL_C, _jestWatcher().KEYS.CONTROL_D].indexOf(key) !== -1) {\n        reject();\n      }\n    });\n  } else {\n    resolve();\n  }\n});\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}