{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getMaxWorkers;\n\nfunction _os() {\n  const data = _interopRequireDefault(require('os'));\n\n  _os = function _os() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction getMaxWorkers(argv, defaultOptions) {\n  if (argv.runInBand) {\n    return 1;\n  } else if (argv.maxWorkers) {\n    return parseWorkers(argv.maxWorkers);\n  } else if (defaultOptions && defaultOptions.maxWorkers) {\n    return parseWorkers(defaultOptions.maxWorkers);\n  } else {\n    // In watch mode, Jest should be unobtrusive and not use all available CPUs.\n    const cpus = _os().default.cpus() ? _os().default.cpus().length : 1;\n    return Math.max(argv.watch ? Math.floor(cpus / 2) : cpus - 1, 1);\n  }\n}\n\nconst parseWorkers = maxWorkers => {\n  const parsed = parseInt(maxWorkers.toString(), 10);\n\n  if (typeof maxWorkers === 'string' && maxWorkers.trim().endsWith('%') && parsed > 0 && parsed <= 100) {\n    const cpus = _os().default.cpus().length;\n\n    const workers = Math.floor(parsed / 100 * cpus);\n    return workers >= 1 ? workers : 1;\n  }\n\n  return parsed > 0 ? parsed : 1;\n};","map":null,"metadata":{},"sourceType":"script"}